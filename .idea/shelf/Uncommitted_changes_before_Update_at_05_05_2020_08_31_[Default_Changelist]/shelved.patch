Index: Association_class/Membre.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"Membre.h\"\r\n\r\nMembre::Membre() {\r\n\r\n}\r\n\r\nMembre::Membre(string p_pole){\r\n    pole = p_pole;\r\n    nom = \" \";\r\n    prenom = \" \";\r\n    mail = \" \";\r\n    departement = \" \";\r\n};\r\n\r\nMembre::Membre( string p_pole, string p_nom, string p_prenom ){\r\n    pole = p_pole;\r\n    nom = p_nom;\r\n    prenom = p_prenom;\r\n    mail = \" \";\r\n    departement = \" \";\r\n};\r\n\r\nMembre::Membre( string p_pole, string p_nom, string p_prenom,\r\nstring p_mail, string p_departement ){\r\n    pole = p_pole;\r\n    nom = p_nom;\r\n    prenom = p_prenom;\r\n    mail = p_mail;\r\n    departement = p_departement;\r\n\r\n};\r\n\r\nMembre::~Membre(){\r\n\r\n};\r\n\r\nstring Membre::getpole() const\r\n{\r\n    return pole;\r\n}\r\n\r\nvoid Membre::setpole(std::string p_pole){\r\n    pole = p_pole;\r\n};\r\n\r\nstring Membre::getNom() const\r\n{\r\n    return nom;\r\n}\r\n\r\nvoid Membre::setNom(std::string p_nom){\r\n    nom = p_nom;\r\n};\r\n\r\nstring Membre::getPrenom() const\r\n{\r\n    return prenom;\r\n}\r\n\r\nvoid Membre::setPrenom(std::string p_prenom){\r\n    prenom = p_prenom;\r\n};\r\n\r\nstring Membre::getMail() const\r\n{\r\n    return mail;\r\n}\r\n\r\nvoid Membre::setMail(std::string p_mail){\r\n    mail = p_mail;\r\n};\r\n\r\nstring Membre::getDepartement() const\r\n{\r\n    return departement;\r\n}\r\n\r\nvoid Membre::setDepartement(std::string p_departement){\r\n    departement = p_departement;\r\n};\r\n\r\nvoid Membre::setNotes(int * pNotes) {\r\n    for (int i = 0; i <11 ; ++i) {\r\n        this->notes[i] = pNotes[i];\r\n    }\r\n};\r\n\r\nint* Membre::getNotes(){\r\n    return this->notes;\r\n}\r\n\r\nvoid Membre::setAdmin() {this->Admin = !this->Admin;}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Association_class/Membre.cpp	(revision cadb369c00bf985ec711affb4567afa3e29d0194)
+++ Association_class/Membre.cpp	(date 1588660053446)
@@ -90,3 +90,5 @@
 }
 
 void Membre::setAdmin() {this->Admin = !this->Admin;}
+
+bool Membre::getAdmin() {return this->Admin;}
Index: Gestion_memoire/Assos/AJIR.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>ADMIN,NOM,PRENOM,POLE,DPT,MAIL@MAIL.fr,3,5,5,5,5,5\r\nCONSU,Dubois,lea,MISSION,ASI,lea.dubois@insa-rouen.fr,3,4,5,1,2,3,4,5,1,2\r\nADMIN,Martin,Alex,treso,GM,alex.martin@insa-rouen.fr,3,4,6,2,5,1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Gestion_memoire/Assos/AJIR.txt	(revision cadb369c00bf985ec711affb4567afa3e29d0194)
+++ Gestion_memoire/Assos/AJIR.txt	(date 1588660053548)
@@ -1,3 +1,4 @@
-ADMIN,NOM,PRENOM,POLE,DPT,MAIL@MAIL.fr,3,5,5,5,5,5
-CONSU,Dubois,lea,MISSION,ASI,lea.dubois@insa-rouen.fr,3,4,5,1,2,3,4,5,1,2
-ADMIN,Martin,Alex,treso,GM,alex.martin@insa-rouen.fr,3,4,6,2,5,1
+ADMIN,NOM,PRENOM,DPT,MAIL@MAIL.fr,ID,PASS,1,Administrateur,POLE,3,5,5,5,5,5
+CONSU,NOM,PRENOM,DPT,MAIL@MAIL.fr,ID,PASS,1,MISSION,3,4,5,1,2,3,4,5,1,2
+ADMIN,NOM,PRENOM,DPT,MAIL@MAIL.fr,ID,PASS,1, ,POLE,3,5,5,5,5,5
+
Index: Association_class/Membre.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ifndef MEMBRE_H\r\n#define MEMBRE_H\r\n\r\n/*!\r\n * \\file Membre.h\r\n * \\brief Definition d'un membre\r\n * \\author groupe A4\r\n */\r\n#include <string>\r\n#include <list>\r\n#include \"Personne.hpp\"\r\n\r\nusing namespace std;\r\n\r\n/*! \\class Membre\r\n   * \\brief classe representant la personne membre dans une association\r\n   *\r\n   *  La classe est heritee de la classe Personne qui definit plus prondement les attributs d une personne\r\n   */\r\n\r\nclass Membre : public Personne {\r\n    int notes[11];\r\n    bool Admin = false;\r\n\r\n\r\npublic:\r\n\r\n    /*!\r\n   *  \\brief Constructeur\r\n   *\r\n   *  Constructeur de la classe Membre\r\n   */\r\n    Membre();\r\n\r\n    /*!\r\n    *  \\brief Constructeur\r\n    *\r\n    *  Constructeur de la classe Membre\r\n    *\r\n    *  \\param p : nom du pole\r\n    */\r\n    Membre(string p_pole);\r\n\r\n    /*!\r\n    *  \\brief Constructeur\r\n    *\r\n    *  Constructeur de la classe Membre\r\n    *\r\n    *  \\param p : nom du pole\r\n    *  \\param LA : liste des attributs\r\n    */\r\n    Membre( string p_pole, string p_nom, string p_prenom );\r\n\r\n    Membre( string p_pole, string p_nom, string p_prenom,\r\n            string p_mail,string p_departement );\r\n    /*!\r\n     *  \\brief Destructeur\r\n     *\r\n     *  Destructeur de la classe Membre\r\n     */\r\n    virtual ~Membre();\r\n\r\n    /*!\r\n     *  \\brief Donne le nom du pole\r\n     *\r\n     *  Methode qui permet de retourner le nom du pole du membre\r\n     *\r\n     *  \\return un str qui est le nom du pole\r\n     */\r\n    string getpole() const;\r\n\r\n    /*!\r\n *  \\brief Change le nom du pole\r\n *\r\n *  Methode qui permet de modifier et de retourner le nom du pole du membre\r\n *\r\n *  \\return un str qui est le nom du pole\r\n */\r\n    void setpole(string p_pole) ;\r\n\r\n    /*!\r\n *  \\brief Donne le nom du membre\r\n *\r\n *  Methode qui permet de retourner le nom du membre\r\n *\r\n *  \\return un str qui est le nom du membre\r\n */\r\n    string getNom() const;\r\n\r\n\r\n    /*!\r\n     *  \\brief Rentre le nom du membre\r\n     *\r\n     *  Methode qui permet de rentrer le nom du membre\r\n     *\r\n     *  \\param p : le nom du membre\r\n     */\r\n\r\n    void setNom(string p_nom);\r\n\r\n    /*!\r\n*  \\brief Donne le prenom du membre\r\n*\r\n*  Methode qui permet de retourner le prenom du membre\r\n*\r\n*  \\return un str qui est le prenom du membre\r\n*/\r\n    string getPrenom() const;\r\n\r\n\r\n    /*!\r\n     *  \\brief Rentre le prenom du membre\r\n     *\r\n     *  Methode qui permet de rentrer le prenom du membre\r\n     *\r\n     *  \\param p : le prenom du membre\r\n     */\r\n\r\n    void setPrenom(string p_prenom);\r\n\r\n    /*!\r\n   *  \\brief Donne le mail du membre\r\n   *\r\n   *  Methode qui permet de retourner le mail du membre\r\n   *\r\n   *  \\return un str qui est le mail du membre\r\n   */\r\n    string getMail() const;\r\n\r\n\r\n    /*!\r\n     *  \\brief Rentre le mail du membre\r\n     *\r\n     *  Methode qui permet de rentrer le mail du membre\r\n     *\r\n     *  \\param p : le mail du membre\r\n     */\r\n\r\n    void setMail(string p_mail);\r\n\r\n    /*!\r\n*  \\brief Donne le departement du membre\r\n*\r\n*  Methode qui permet de retourner le departement du membre\r\n*\r\n*  \\return un str qui est le departement du membre\r\n*/\r\n    string getDepartement() const;\r\n\r\n\r\n    /*!\r\n     *  \\brief Rentre le departement du membre\r\n     *\r\n     *  Methode qui permet de rentrer le departement du membre\r\n     *\r\n     *  \\param p : le departement du membre\r\n     */\r\n\r\n    void setDepartement(string p_departement);\r\n\r\n    void setNotes(int[6]);\r\n\r\n    int* getNotes();\r\n\r\n    void setAdmin();\r\n   /*!\r\n   *  \\brief Redefinition de l'operateur ==\r\n   *\r\n   *  Des membres sont identiques si ils ont le meme nom et le meme prenom\r\n   */\r\n    bool operator == (const Membre obj1)\r\n    {\r\n        return (this->nom == obj1.nom\r\n                && this->prenom == obj1.prenom);\r\n    }\r\n\r\n    /*!\r\n   *  \\brief Redefinition de l'operateur <\r\n   *\r\n   *  On trie selon le nom\r\n   */\r\n\r\n    bool operator < (const Membre obj1)\r\n    {\r\n        return (this->nom < obj1.nom);\r\n    }\r\n\r\n};\r\n\r\n#endif // MEMBRE_H
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Association_class/Membre.h	(revision cadb369c00bf985ec711affb4567afa3e29d0194)
+++ Association_class/Membre.h	(date 1588660053561)
@@ -163,6 +163,8 @@
     int* getNotes();
 
     void setAdmin();
+
+    bool getAdmin();
    /*!
    *  \brief Redefinition de l'operateur ==
    *
Index: Gestion_memoire/Gestion_membre.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by marso on 28/04/2020.\r\n//\r\n#include <stdio.h>\r\n#include <windows.h>\r\n#include <dirent.h>\r\n#include \"Gestion_membre.h\"\r\n#include <fstream>\r\n#include <vector>\r\n#include <unistd.h>\r\n#include \"../Association_class/Association.hpp\"\r\n\r\nAssociation Gestion_membre::Load(string NomAsso) {\r\n    //on regarde si l'association éxiste\r\n    DIR * rep = opendir(\"Gestion_memoire/Assos\");\r\n    Association result = Association(NomAsso);\r\n    std::string temp,path;\r\n    int temp2;\r\n    if (rep != NULL)\r\n    {\r\n        struct dirent * ent;\r\n        while ((ent = readdir(rep)) != NULL)\r\n        {\r\n            temp = ent->d_name;\r\n            temp2 = temp.find(NomAsso);\r\n            if(temp2 != -1){\r\n                path = \"Gestion_memoire/Assos/\"+temp;\r\n            }\r\n        }\r\n        closedir(rep);\r\n        //On effectue le cahregement à aprtir d'ici\r\n        ifstream Fichier(path);\r\n        Membre tMembre = Membre();\r\n        if(Fichier){\r\n            string ligne;\r\n            while( getline(Fichier, ligne) )\r\n            {\r\n                //on trouve le type de Personne\r\n                temp2 = ligne.find(\",\");\r\n                std::string type  = ligne.substr(0,temp2);\r\n                //on définit les paramètres de personne\r\n                if(type.compare(\"ADMIN\") ==0){\r\n                    Membre tMembre = Membre();\r\n                    int tNotes[11];\r\n\r\n                    //On règle les paramètres de personne\r\n\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n                    temp2 = ligne.find(\",\");\r\n                    tMembre.setNom(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tMembre.setPrenom(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tMembre.setDepartement(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tMembre.setMail(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n\r\n                    //on règle les paramètres de membre\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tMembre.setpole(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    for (int i = 0; i < 11  ; ++i) {\r\n                        temp2 = ligne.find(\",\");\r\n                        temp = ligne.substr(0,temp2);\r\n                        ligne = ligne.substr(temp2+1,ligne.length());\r\n                        tNotes[i] = std::stoi(temp);\r\n                    }\r\n                    tMembre.setNotes(tNotes);\r\n                    result.ajouterMembre(tMembre);\r\n                }else{\r\n                    int tNotes[10];\r\n                    Consultant tConsultant = Consultant();\r\n\r\n                    //On règle les paramètres de personne\r\n\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n                    temp2 = ligne.find(\",\");\r\n                    tConsultant.setNom(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tConsultant.setPrenom(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tConsultant.setDepartement(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tConsultant.setMail(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n\r\n                    //on règle les paramètres de membre\r\n\r\n                    temp2 = ligne.find(\",\");\r\n                    tConsultant.setMission(ligne.substr(0,temp2));\r\n                    ligne = ligne.substr(temp2+1,ligne.length());\r\n\r\n                    for (int i = 0; i < 10  ; ++i) {\r\n                        temp2 = ligne.find(\",\");\r\n                        temp = ligne.substr(0,temp2);\r\n                        ligne = ligne.substr(temp2+1,ligne.length());\r\n                        tNotes[i] = std::stoi(temp);\r\n                    }\r\n                    tConsultant.setNotes(tNotes);\r\n                    result.ajouterConsultant(tConsultant);\r\n                }\r\n            }\r\n        }else{\r\n            cout << \"ERREUR: Impossible d'ouvrir le fichier.\" << endl;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nvoid Gestion_membre::save(Association pAssociation) {\r\n    ofstream monFichier(\"Gestion_memoire/Assos/\"+pAssociation.getNom()+\".txt\");\r\n    int* tab;\r\n    Membre tMembre;\r\n    Consultant tConsultant;\r\n    if(monFichier){\r\n        vector<Membre> listMembre =  pAssociation.getMembres();\r\n        vector<Membre>::iterator it;\r\n        for(it = listMembre.begin(); it!=listMembre.end();++it){\r\n            tMembre = *it;\r\n            monFichier << \"ADMIN,\" << tMembre.getNom()+\",\" << tMembre.getPrenom()+\",\";\r\n            monFichier<< tMembre.getpole()+\",\";\r\n            monFichier << tMembre.getDepartement()+\",\" << tMembre.getMail();\r\n            tab = tMembre.getNotes();\r\n            int i;\r\n            for ( i = 0; i < 10 ; ++i) {\r\n                monFichier << \",\" << tab[i];\r\n            }\r\n            monFichier << \",\" << tab[i] << endl;\r\n        }\r\n        vector<Consultant> listConsultant =  pAssociation.getConsultant();\r\n        vector<Consultant>::iterator it2;\r\n        for(it2 = listConsultant.begin(); it2!=listConsultant.end();++it2){\r\n            tConsultant = *it2;\r\n            monFichier << \"CONSU,\" << tConsultant.getNom()+\",\" << tConsultant.getPrenom()+\",\";\r\n            monFichier<< tConsultant.getMission()+\",\";\r\n            monFichier << tConsultant.getDepartement()+\",\" << tConsultant.getMail();\r\n            tab = tConsultant.getNotes();\r\n            int i;\r\n            for (i = 0; i < 9 ; ++i) {\r\n                monFichier << \",\" << tab[i];\r\n            }\r\n            monFichier << \",\" << tab[i]<<endl;\r\n        }\r\n        monFichier.close();\r\n    }else{\r\n        cout << \"ERREUR: Impossible d'ouvrir le fichier.\" << endl;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Gestion_memoire/Gestion_membre.cpp	(revision cadb369c00bf985ec711affb4567afa3e29d0194)
+++ Gestion_memoire/Gestion_membre.cpp	(date 1588660053516)
@@ -5,6 +5,7 @@
 #include <windows.h>
 #include <dirent.h>
 #include "Gestion_membre.h"
+#include "Personne.hpp"
 #include <fstream>
 #include <vector>
 #include <unistd.h>
@@ -62,6 +63,24 @@
                     tMembre.setMail(ligne.substr(0,temp2));
                     ligne = ligne.substr(temp2+1,ligne.length());
 
+                    temp2 = ligne.find(",");
+                    tMembre.setID(ligne.substr(0,temp2));
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
+                    temp2 = ligne.find(",");
+                    tMembre.setpass(ligne.substr(0,temp2));
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
+                    temp2 = ligne.find(",");
+                    tMembre.setsaves(std::stoi(ligne.substr(0,temp2)));
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
+                    temp2 = ligne.find(",");
+                    if((ligne.substr(0,temp2).compare("Administrateur")){
+                        tMembre.setAdmin();
+                    }
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
 
                     //on règle les paramètres de membre
 
@@ -100,6 +119,18 @@
                     tConsultant.setMail(ligne.substr(0,temp2));
                     ligne = ligne.substr(temp2+1,ligne.length());
 
+                    temp2 = ligne.find(",");
+                    tMembre.setID(ligne.substr(0,temp2));
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
+                    temp2 = ligne.find(",");
+                    tMembre.setpass(ligne.substr(0,temp2));
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
+                    temp2 = ligne.find(",");
+                    tMembre.setsaves(std::stoi(ligne.substr(0,temp2)));
+                    ligne = ligne.substr(temp2+1,ligne.length());
+
 
                     //on règle les paramètres de membre
 
@@ -134,9 +165,19 @@
         vector<Membre>::iterator it;
         for(it = listMembre.begin(); it!=listMembre.end();++it){
             tMembre = *it;
-            monFichier << "ADMIN," << tMembre.getNom()+"," << tMembre.getPrenom()+",";
+            //Nomenclature
+            monFichier << "ADMIN," ;
+            //Paramètres généraux
+            monFichier<< tMembre.getNom()+"," << tMembre.getPrenom()+",";
+            monFichier << tMembre.getDepartement()+"," << tMembre.getMail()+",";
+            monFichier << tMembre.getID()+"," << tMembre.getpass()+"," << tMembre.getsaves() << ",";
+            if(tMembre.getAdmin()){
+                monFichier << "Administrateur,";
+            }else{
+                monFichier << " ,";
+            }
+            //Paramètres membres
             monFichier<< tMembre.getpole()+",";
-            monFichier << tMembre.getDepartement()+"," << tMembre.getMail();
             tab = tMembre.getNotes();
             int i;
             for ( i = 0; i < 10 ; ++i) {
@@ -148,9 +189,14 @@
         vector<Consultant>::iterator it2;
         for(it2 = listConsultant.begin(); it2!=listConsultant.end();++it2){
             tConsultant = *it2;
-            monFichier << "CONSU," << tConsultant.getNom()+"," << tConsultant.getPrenom()+",";
-            monFichier<< tConsultant.getMission()+",";
+            //Nomenclature
+            monFichier << "CONSU," ;
+            //Paramètres généraux
+            monFichier << tConsultant.getNom()+"," << tConsultant.getPrenom()+",";
             monFichier << tConsultant.getDepartement()+"," << tConsultant.getMail();
+            monFichier << tMembre.getID()+"," << tMembre.getpass()+"," << tMembre.getsaves() << ",";
+            //Paramètres Consultant
+            monFichier<< tConsultant.getMission()+",";
             tab = tConsultant.getNotes();
             int i;
             for (i = 0; i < 9 ; ++i) {
